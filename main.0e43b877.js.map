{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tHead","addEventListener","e","index","target","cellIndex","tableBody","tBodies","sorted","rows","sort","a","b","aText","cells","innerText","replace","bText","result","classList","contains","isNaN","parseFloat","localeCompare","toggle","append","children","filter","tr","parentNode","forEach","remove","add","form","createElement","setAttribute","after","insertAdjacentHTML","submitBtn","showNotification","type","state","description","notification","querySelectorAll","setTimeout","message","preventDefault","formData","FormData","dataObject","Object","fromEntries","entries","name","length","Number","age","office","position","salary","value","toLocaleString"],"mappings":"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","file":"main.0e43b877.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\ntable.tHead.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n  const tableBody = [...table.tBodies][0];\n\n  const sorted = [ ...tableBody.rows ].sort((a, b) => {\n    const aText = a.cells[index].innerText.replace(/\\W/g, '');\n    const bText = b.cells[index].innerText.replace(/\\W/g, '');\n    let result;\n\n    if (!e.target.classList.contains('sort')) {\n      result = !isNaN(parseFloat(aText))\n        ? +aText - +bText\n        : aText.localeCompare(bText);\n    } else {\n      result = !isNaN(parseFloat(aText))\n        ? +bText - +aText\n        : bText.localeCompare(aText);\n    }\n\n    return result;\n  });\n\n  e.target.classList.toggle('sort');\n\n  tableBody.append(...sorted);\n});\n\ntable.tBodies[0].addEventListener('click', (e) => {\n  const allOtherTr = [ ...table.tBodies[0].children ].filter(tr => {\n    return (tr !== e.target.parentNode);\n  });\n\n  allOtherTr.forEach(tr => {\n    tr.classList.remove('active');\n  });\n\n  e.target.parentNode.classList.add('active');\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\nform.setAttribute('action', '#');\nform.setAttribute('method', 'post');\n\ntable.after(form);\n\nform.insertAdjacentHTML('beforeend',\n  `<label>Name:\n    <input\n      name=\"name\"\n      type=\"text\"\n      required\n      data-qa=\"name\">\n  </label>\n\n  <label>Position:\n    <input\n      name=\"position\"\n      type=\"text\"\n      required\n      data-qa=\"position\"\n    >\n  </label>\n\n  <label>Office:\n    <select\n      name=\"office\"\n      required\n      data-qa=\"office\"\n    >\n      <option value=\"\" disabled selected></option>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label>Age:\n    <input\n      name=\"age\"\n      type=\"number\"\n      required\n      data-qa=\"age\"\n    >\n  </label>\n\n  <label>Salary:\n    <input\n      name=\"salary\"\n      type=\"number\"\n      required\n      data-qa=\"salary\"\n    >\n  </label>\n\n<button type=\"submit\">Save to table</button>`);\n\nconst submitBtn = document.querySelector('button');\n\nsubmitBtn.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const dataObject = Object.fromEntries(formData.entries());\n\n  if (dataObject.name.length < 4) {\n    showNotification('Incorrect name', 'error',\n      'Name should have more than 4 letters');\n  } else if (Number(dataObject.age) < 18 || Number(dataObject.age) > 90) {\n    showNotification('Incorrect age', 'error',\n      'Age must be between 18 to 90. Please, enter correct number.');\n  } else if (dataObject.office === '' || dataObject.position === '') {\n    showNotification('Empty fiels', 'error',\n      'No empty fields allowed');\n  } else if (dataObject.salary < 0) {\n    showNotification('Incorrect salary', 'error',\n      'No negative numbers allowed. Please, enter correct number');\n  } else {\n    showNotification('Success!', 'success', 'New employee added');\n\n    const salary = Number(form.salary.value).toLocaleString('en-US');\n\n    table.tBodies[0].insertAdjacentHTML('beforeend',\n      `<tr>\n         <td>${form.name.value}</td>\n         <td>${form.position.value}</td>\n         <td>${form.office.value}</td>\n         <td>${form.age.value}</td>\n         <td>$${salary}</td>\n        </tr>`\n    );\n  }\n});\n\nfunction showNotification(type, state, description) {\n  const body = document.querySelector('body');\n\n  body.insertAdjacentHTML(`beforeend`, `\n    <div class=\"notification ${state}\"\n      data-qa=\"notification\"\n    >\n      <h2 class=\"title\">\n        ${type}\n      </h2>\n\n      <p>\n        ${description}\n      </p>\n    </div>`);\n\n  const notification = document.querySelectorAll('.notification');\n\n  setTimeout(() => {\n    notification.forEach(message => message.remove());\n  }, 2000);\n}\n"]}